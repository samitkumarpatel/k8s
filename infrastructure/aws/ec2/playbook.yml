---
- name: Download and prepare Kubernetes signing key locally
  hosts: localhost
  tags: key-download
  tasks:
    - name: Ensure local keyring directory exists
      ansible.builtin.file:
        path: ./keys
        state: directory
        mode: '0755'

    - name: Download Kubernetes signing key
      ansible.builtin.get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key
        dest: ./keys/Release.key

    - name: Dearmor the Kubernetes signing key
      ansible.builtin.command: |
        gpg --dearmor -o ./keys/kubernetes-apt-keyring.gpg ./keys/Release.key
      args:
        creates: ./keys/kubernetes-apt-keyring.gpg

- name: Setup Kubernetes Cluster
  hosts: all
  become: yes
  remote_user: ubuntu
  gather_facts: true
  tasks:
    - name: Disable firewall
      ansible.builtin.systemd_service:
        name: ufw
        state: stopped
        enabled: false

    - name: Disable swap
      ansible.builtin.shell: swapoff -a

    - name: Remove swap entry from fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^(.*swap.*)'
        state: absent

    - name: Install Kubernetes dependencies
      ansible.builtin.apt:
        update_cache: yes
        state: present
        pkg:
        - docker.io
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - gpg

    - name: Add user to the docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Ensure Docker service is enabled and started
      ansible.builtin.systemd_service:
        state: started
        name: docker    
        enabled: yes

    # - name: Ensure the keyring directory exists
    #   ansible.builtin.file:
    #     path: /etc/apt/keyrings
    #     state: directory
    #     mode: '0755'

    # - name: Download and dearmor the Kubernetes signing key
    #   ansible.builtin.shell: |
    #     curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key |
    #     gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Ensure the keyring directory exists on remote hosts
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Copy Kubernetes signing key to remote hosts
      ansible.builtin.copy:
        src: ./keys/kubernetes-apt-keyring.gpg
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        mode: '0644'

    - name: Add Kubernetes apt repository
      ansible.builtin.apt_repository:
        repo: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /'
        state: present
        filename: kubernetes
        update_cache: yes
    
    - name: Update apt package index
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Kubernetes components
      ansible.builtin.apt:
        update_cache: yes
        state: present
        pkg:
        - kubelet
        - kubeadm
        - kubectl

    - name: Enable and start kubelet service
      ansible.builtin.systemd:
        name: kubelet
        enabled: yes
        state: started
  
- hosts: manager
  become: yes
  remote_user: ubuntu
  tasks:
    - name: Initialize Kubernetes control plane
      ansible.builtin.shell: |
        kubeadm init
      args:
        creates: /etc/kubernetes/admin.conf
    
    - name: Ensure .kube directory exists for user
      ansible.builtin.file:
        path: /home/ubuntu/.kube
        state: directory
        mode: '0755'
        owner: ubuntu
        group: '{{ansible_user}}'

    - name: Copy kubeconfig to user directory
      ansible.builtin.command: |
        cp /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
      become: true
      become_user: root

    - name: Set kubeconfig permissions
      ansible.builtin.file:
        path: /home/ubuntu/.kube/config
        owner: ubuntu
        group: ubuntu
        mode: '0600'

    - name: Install Flannel CNI
      ansible.builtin.command: |
        kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Get join command for worker nodes
      ansible.builtin.shell: |
        kubeadm token create --print-join-command
      register: kube_init
      failed_when: "kube_init.rc != 0"

    - name: Set fact
      ansible.builtin.set_fact:
        kube_join_token_command: "{{ kube_init.stdout }}"
      delegate_facts: true

- hosts: worker
  become: true
  tags: worker
  tasks:
    - name: debug
      ansible.builtin.debug:
        msg: kube_join_token_command = {{ hostvars[groups['manager'][0]]['kube_join_token_command'] }}
    - name: Join worker
      ansible.builtin.shell: 
        cmd: |
          {{ hostvars[groups['manager'][0]]['kube_join_token_command'] }}
      register: worker_join
      failed_when: "worker_join.rc != 0"
      become: true
      become_user: root